generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id         String      @id @default(cuid())
  body       String
  sender     User        @relation(fields: [senderId], references: [id])
  senderId   String
  chat       Chat        @relation(fields: [chatId], references: [id])
  chatId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  recipients Recipient[]
}

model Recipient {
  id          String   @id @default(cuid())
  recipientId String
  message     Message  @relation(fields: [messageId], references: [id])
  messageId   String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Status {
  id          String @id @default(cuid())
  unreadCount Int    @default(0)
  user        User   @relation(fields: [userId], references: [id])
  userId      String
  Chat        Chat   @relation(fields: [chatId], references: [id])
  chatId      String
}

model Chat {
  id          String    @id @default(cuid())
  users       User[]
  messages    Message[]
  lastMessage String    @default("No messages yet")
  unreadCount Status[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Session {
  id String @id @default(cuid())

  socketId   String    @default("")
  isOnline   Boolean   @default(false)
  lastOnline DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             String    @id @default(cuid())
  displayName    String
  profilePicure  String?
  email          String    @unique
  phoneNumber    Int?      @unique
  username       String?   @unique
  password       String
  activeSessions Session[]
  authToken      String?
  authTokenExp   Int?
  chats          Chat[]
  messages       Message[]
  chatStatuses   Status[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
